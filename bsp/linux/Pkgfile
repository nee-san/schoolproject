# Description: The Linux kernel
# URL:         https://www.kernel.org/
# Maintainer:  nee-san, nagakamira at gmail dot com
# Depends on:  kmod bc libelf xz libressl

name=linux
version=5.0.7
release=2
source=("https://cdn.kernel.org/pub/linux/kernel/v5.x/$name-$version.tar.xz")
BOOTSTRAP=yes
NO_RUN_STRIP=1

yconfig() {
	while [ $# -ne 0 ]; do
		sed -i "s/.*CONFIG_$1.*/CONFIG_$1=y/" .config
		shift 1
	done
}

mconfig() {
	while [ $# -ne 0 ]; do
		sed -i "s/.*CONFIG_$1.*/CONFIG_$1=m/" .config
		shift 1
	done
}

nconfig() {
	while [ $# -ne 0 ]; do
		sed -i "s/^CONFIG_$1.*/\\# CONFIG_$1 is not set/" .config
		shift 1
	done
}

generate_config() {
	touch .config
	cat "$STUFF"/linux/config >> .config

	case $BARCH in
		x86_64|i686)
			SUBKARCH="x86"
			;;
		*)
			SUBKARCH="$XKARCH"
			;;
	esac

	case $BARCH in
		x86_64)
			export DEFCONFIG="x86_64_defconfig"
			;;
		i686)
			export DEFCONFIG="i386_defconfig"
			;;
		aarch64)
			export DEFCONFIG="defconfig"
			;;
		armv7l)
			export DEFCONFIG="multi_v7_defconfig"
			;;
		armv5tel)
			export DEFCONFIG="multi_v5_defconfig"
			;;
		mips64|mips64el|mips|mipsel)
			export DEFCONFIG="malta_defconfig"
			;;
		ppc64le)
			export DEFCONFIG="powernv_defconfig"
			;;
		ppc64)
			export DEFCONFIG="g5_defconfig"
			;;
		ppc)
			export DEFCONFIG="pmac32_defconfig"
			;;
		riscv64|riscv32)
			export DEFCONFIG="defconfig"
			;;
		*)
			echo "Architecture is not set or is not supported by januslinux"
			exit 1
	esac

	cat arch/$SUBKARCH/configs/$DEFCONFIG >> .config

	case $BARCH in
		x86_64|i686)
			for archconf in PCI BLK_DEV_SD ATA ATA_SFF ATA_BMDMA ATA_PIIX NET_VENDOR_INTEL E1000 SERIAL_8250 SERIAL_8250_CONSOLE RTC_CLASS EFI EFI_STUB EFI_MIXED EFI_VARS FB_EFI EFI_RUNTIME_MAP EFIVAR_FS; do
				yconfig $archconf
			done
			;;
		mips64|mips64el|mips|mipsel)
			for archconf in SERIAL_8250 SERIAL_8250_CONSOLE PCI BLK_DEV_SD ATA ATA_SFF ATA_BMDMA ATA_PIIX NET_VENDOR_AMD PCNET32 POWER_RESET POWER_RESET_SYSCON; do
				yconfig $archconf
			done
			;;
		riscv64|riscv32)
			for archconf in RISCV_ISA_C RISCV_ISA_A FPU SIFIVE_PLIC LBDAF SECTION_MISMATCH_WARN_ONLY; do
				yconfig $archconf
			done
			;;
	esac

	case $BARCH in
		x86_64)
			for archconf in 64BIT IA32_EMULATION; do
				yconfig $archconf
			done
			;;
		ppc64le)
			yconfig POWER8_CPU
			yconfig TARGET_CPU_BOOL
			sed -i "s/.*CONFIG_TARGET_CPU.*/CONFIG_TARGET_CPU=\"power8\"/" .config
			;;
	esac

	case $BARCH in
		mips64|mips64el)
			nconfig CPU_MIPS32_R2
			nconfig 32BIT
			for archconf in CPU_MIPS64_R2 MIPS_O32_FP64_SUPPORT 64BIT MIPS32_O32 MIPS32_N32; do
				yconfig $archconf
			done
			;;
	esac

	case $BARCH in
		riscv64|riscv32)
			for archconf in ARCH_RV32I ARCH_RV64I 64BIT; do
				nconfig $archconf
			done
			;;
	esac

	case $BARCH in
		riscv64)
			for archconf in AARCH_RV64I 64BIT; do
				yconfig $archconf
			done
			;;
		riscv32)
			yconfig ARCH_RV32I
			;;
	esac

	case $BARCH in
		mips64|mips64el)
			nconfig CPU_MIPS32_R2
			nconfig 32BIT
			for archconf in CPU_MIPS64_R2 MIPS_O32_FP64_SUPPORT 64BIT MIPS32_O32 MIPS32_N32; do
				yconfig $archconf
			done
			;;
	esac

	if [ "$CROSS" = "yes" ]; then
		yes '' | make ARCH=$XKARCH CROSS_COMPILE=${CROSS_COMPILE} oldconfig
	else
		yes '' | make ARCH=$XKARCH oldconfig
	fi
}

build() {
	case $BARCH in
		x86_64)
			export XKARCH="x86_64"
			export IMAGELOC="arch/x86/boot/bzImage"
			;;
		i686)
			export XKARCH="i386"
			export IMAGELOC="arch/x86/boot/bzImage"
			;;
		aarch64)
			export XKARCH="arm64"
			export IMAGELOC="arch/arm64/boot/Image"
			;;
		armv7l|armv5tel)
			export XKARCH="arm"
			export IMAGELOC="arch/arm/boot/zImage"
			;;
		mips64|mips64el|mips|mipsel)
			export XKARCH="mips"
			export IMAGELOC="vmlinux"
			;;
		ppc64le|ppc64|ppc)
			export XKARCH="powerpc"
			export IMAGELOC="vmlinux"
			;;
		riscv64|riscv32)
			export XKARCH="riscv"
			export IMAGELOC="vmlinux"
			;;
		*)
			echo "Architecture is not set or is not supported by januslinux"
			exit 1
	esac

	cd "$SRC"/$name-$version
	patch -Np1 -i "$STUFF"/linux/muqss.patch
	patch -Np1 -i "$STUFF"/linux/hz-of-100-muqs.patch
	patch -Np1 -i "$STUFF"/linux/swap-sucks.patch
	patch -Np1 -i "$STUFF"/linux/wireguard.patch

	unset LDFLAGS
	make mrproper

	if [ "$CROSS" != "yes" ]; then
		if [ -f /boot/config-linux ]; then
			cp /boot/config-linux .config
		else
			generate_config
		fi
	else
		generate_config
	fi

	if [ "$CROSS" = "yes" ]; then
		make ARCH=$XKARCH CROSS_COMPILE=${CROSS_COMPILE}
	else
		make ARCH=$XKARCH
	fi

	if [ "$CROSS" = "yes" ]; then
		make ARCH=$XKARCH CROSS_COMPILE=${CROSS_COMPILE} INSTALL_MOD_PATH="$PKG"/usr modules_install
	else
		make ARCH=$XKARCH INSTALL_MOD_PATH="$PKG"/usr modules_install
	fi

	mkdir -p "$PKG"/boot
	cp "$IMAGELOC" "$PKG"/boot/vmlinuz-linux
	cp .config "$PKG"/boot/config-linux

	case $BARCH in
		aarch64|armv7l|armv5tel)
			if [ "$CROSS" = "yes" ]; then
				make ARCH=$XKARCH CROSS_COMPILE=${CROSS_COMPILE} INSTALL_DTBS_PATH="$PKG"/boot/dtbs dtbs_install
			else
				make ARCH=$XKARCH INSTALL_DTBS_PATH="$PKG"/boot/dtbs dtbs_install
			fi
			;;
		riscv64|riscv32)
			${CROSS_COMPILE}objcopy -O binary "$PKG"/boot/vmlinuz-linux "$PKG"/boot/vmlinuz-linux.bin
			;;
	esac
}

