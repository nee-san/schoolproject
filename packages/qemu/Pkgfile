# Description: A generic and open source machine emulator and virtualizer
# URL:         http://wiki.qemu.org/
# Maintainer:  protonesso, nagakamira at gmail dot com
# Depends on:  glib python2 pixman alsa-lib sdl2 gtk

name=qemu
version=2.12.1
release=1
source=(http://download.qemu-project.org/$name-$version.tar.bz2)

build() {
	export ARFLAGS=rv
	export CFLAGS="$CFLAGS -fPIC"
	cd $name-$version
	patch -Np1 -i $KEEP/qemu/0001-elfload-load-PIE-executables-to-right-address.patch
	patch -Np1 -i $KEEP/qemu/0006-linux-user-signal.c-define-__SIGRTMIN-MAX-for-non-GN.patch
	patch -Np1 -i $KEEP/qemu/0001-linux-user-fix-build-with-musl-on-aarch64.patch
	patch -Np1 -i $KEEP/qemu/musl-F_SHLCK-and-F_EXLCK.patch
	patch -Np1 -i $KEEP/qemu/fix-sigevent-and-sigval_t.patch
	patch -Np1 -i $KEEP/qemu/xattr_size_max.patch
	patch -Np1 -i $KEEP/qemu/ncurses.patch
	patch -Np1 -i $KEEP/qemu/ignore-signals-33-and-64-to-allow-golang-emulation.patch
	patch -Np1 -i $KEEP/qemu/0001-linux-user-fix-build-with-musl-on-ppc64le.patch
	patch -Np1 -i $KEEP/qemu/fix-sockios-header.patch
	patch -Np1 -i $KEEP/qemu/test-crypto-ivgen-skip-essiv.patch
	patch -Np1 -i $KEEP/qemu/0001-ui-add-x_keymap.o-to-modules.patch
	sed -i 's/^VL_LDFLAGS=$/VL_LDFLAGS=-Wl,-z,execheap/' \
		Makefile.target
	mkdir -p build && cd build
	CFLAGS="${CFLAGS/-Os/-O2}" ../configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libexecdir=/usr/lib/qemu \
		--python=/usr/bin/python2 \
		--smbd=/usr/bin/smbd \
		--audio-drv-list=alsa \
		--with-gtkabi=3.0 \
		--with-sdlabi=2.0 \
		--enable-kvm \
		--enable-modules \
		--enable-pie \
		--disable-linux-user
	make
	make DESTDIR=$PKG install

	mkdir -p $PKG/usr/lib/udev/rules.d
cat > $PKG/usr/lib/udev/rules.d/65-kvm.rules << "EOF"
KERNEL=="kvm", GROUP="kvm", MODE="0660"
EOF

	chgrp kvm $PKG/usr/lib/qemu/qemu-bridge-helper 
	chmod 4750 $PKG/usr/lib/qemu/qemu-bridge-helper

	echo "Stripping $name package..."
	find $PKG -type f | xargs file 2>/dev/null | grep "LSB executable"       | cut -f 1 -d : | xargs $STRIP --strip-all			2>/dev/null || true
	find $PKG -type f | xargs file 2>/dev/null | grep "shared object"        | cut -f 1 -d : | xargs $STRIP --strip-unneeded		2>/dev/null || true
	find $PKG -type f | xargs file 2>/dev/null | grep "current ar archive"   | cut -f 1 -d : | xargs $STRIP --strip-debug			2>/dev/null || true
	find $PKG -type f | xargs file 2>/dev/null | grep "libtool library file" | cut -f 1 -d : | xargs rm -rf					2>/dev/null || true
	cd $PKG
	rm -rf {,usr/}{,local/}{,share/}{doc,man,info,locale} usr{,/local}{,/share},opt/*}/{man,info} usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc}
	rm -rf {,usr/}lib/charset.alias
}
