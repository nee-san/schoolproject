# Description: The Go programming language
# URL:         http://golang.org/
# Maintainer:  protonesso, nagakamira at gmail dot com

name=go
version=1.10.3
bootstrapver=20171003
release=1
source=(https://storage.googleapis.com/golang/go$version.src.tar.gz)

build() {
	case "$BARCH" in
		x86_64*)
			export GOARCH=amd64
			export GOOS=linux
			;;
		i686*)
			export GOARCH="386"
			export GO386=387
			;;
		*)
			echo "Unsupported architecture"
			exit 1
	esac

	mkdir -p bootstrap

	export XBOOTSTRAP="$(pwd)/bootstrap"

	curl -C - -L -O https://dl.google.com/go/go1.4-bootstrap-$bootstrapver.tar.gz
	tar -xf go1.4-bootstrap-$bootstrapver.tar.gz -C bootstrap

	cd bootstrap/$name
	cd src
	CGO_ENABLED=0 ./make.bash

	cd ../../../$name
	cd src

	export GOROOT_FINAL=/usr/lib/go
	export GOROOT_BOOTSTRAP=$XBOOTSTRAP/go

	CGO_ENABLED=0 ./make.bash

	install -d -m 755 $PKG/usr/bin
	install -d -m 755 $PKG/usr/lib/go/pkg/tool

	cd ..

	if [ -d bin/linux_$GOARCH ]; then
		cp -R bin/linux_$GOARCH $PKG/usr/lib/go/bin
	else
		cp -R bin $PKG/usr/lib/go/bin
	fi

	cp -R pkg/linux_$GOARCH $PKG/usr/lib/go/pkg/
	cp -R pkg/tool/linux_$GOARCH $PKG/usr/lib/go/pkg/tool/
	cp -R src $PKG/usr/lib/go/src
	ln -sf ../lib/go/bin/go $PKG/usr/bin/go
	ln -sf ../lib/go/bin/gofmt $PKG/usr/bin/gofmt

	find $PKG/usr/lib/go/src -name "testdata" | sort -u | xargs rm -rf
	rm -rf $PKG/usr/lib/go/pkg/bootstrap
	rm -rf $PKG/usr/lib/go/pkg/tools/*/api

	echo "Stripping $name package..."
	find $PKG -type f | xargs file 2>/dev/null | grep "LSB executable"       | cut -f 1 -d : | xargs $STRIP --strip-all			2>/dev/null || true
	find $PKG -type f | xargs file 2>/dev/null | grep "shared object"        | cut -f 1 -d : | xargs $STRIP --strip-unneeded		2>/dev/null || true
	find $PKG -type f | xargs file 2>/dev/null | grep "current ar archive"   | cut -f 1 -d : | xargs $STRIP --strip-debug			2>/dev/null || true
	find $PKG -type f | xargs file 2>/dev/null | grep "libtool library file" | cut -f 1 -d : | xargs rm -rf					2>/dev/null || true
	cd $PKG
	rm -rf {,usr/}{,local/}{,share/}{doc,man,info,locale} usr{,/local}{,/share},opt/*}/{man,info} usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc}
	rm -rf {,usr/}lib/charset.alias
}
